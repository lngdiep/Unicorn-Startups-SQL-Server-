alter table Unicorn_Startups_202209
alter column Company nvarchar(100)
alter column Country nvarchar(100)
alter column City nvarchar(100)
alter column Industry nvarchar(100)
alter column Investors nvarchar(100)
;

-- Yearly Listed Unicorns by Industry
select
	Industry,
	YEAR(Date_Joined) as Year,
	Company
from Unicorn_Startups_202209
group by Industry, YEAR(Date_Joined), Company
;

-- Yearly Listed Unicorns by Country
select
	Country,
	YEAR(Date_Joined) as Year,
	Company
from Unicorn_Startups_202209
group by Country, YEAR(Date_Joined), Company
;

-- Top 3 countries with maximum Unicorn Startups
SELECT
	top 3 Country,
	count(Company) as startup_counts
FROM Unicorn_Startups_202209
group by Country
order by startup_counts desc
;

-- City wise analysis of top 3 countries
with top_3_country as
(SELECT
	top 3 Country,
	count(Company) as startup_counts
FROM Unicorn_Startups_202209
group by Country
order by startup_counts desc)

select
	country,
	city
from Unicorn_Startups_202209
where country in
	(select country
	from top_3_country)
;
-- total valuation of unicorn companies in each country
select
	Country,
	sum(valuation_B) as total_valuation
from Unicorn_Startups_202209
group by Country
order by total_valuation desc
;

-- Young Unicorns. Most of the means/medians fall nicely along the 1.6 - 2 range indicating a beginning emergence and progression of young unicorns.
select
	company as young_unicorns,
	avg(Valuation_B) as average_valuation
from Unicorn_Startups_202209
group by company
having avg(Valuation_B) between 1.6 and 2.0
order by average_valuation desc
;

select young_unicorns, Valuation_B
from
(select
	Company as young_unicorns,
	Valuation_B,
	PERCENTILE_CONT(0.5) within group (order by Valuation_B) over(partition by company) as median_valuation
from Unicorn_Startups_202209
group by company, Valuation_B) as med
where median_valuation between 1.6 and 2.0
order by median_valuation desc
;
-- The unicorns are evolving - which of them are near to their next evolution (Decacorn) and from what countries?

-- Decacorns (10-100 B valuation) of top 10 countries
select
	Country,
	Company,
	Valuation_B
from Unicorn_Startups_202209
where Valuation_B between 10 and 100
and Country in
(select 
	top 10 Country
from Unicorn_Startups_202209
group by Country
order by sum(Valuation_B) desc)
;
-- Hectocorns (>100B valuation)
select
	Country,
	Company,
	Valuation_B
from Unicorn_Startups_202209
where Valuation_B>100
;
-- Top 2 Contenders

-- The impact of COVID-19 pandemic on Unicorn listings, on the following year which is 2020?
	-- the rate at which new startups join each year, from 2011?
select *
from
	(select
		distinct Year,
		newjoins_yearly,
		newjoins_yearly - lag(newjoins_yearly) over(order by Year) as yearly_increase
	from
		(select 
			year(Date_Joined) as Year,
			count(*) over(partition by year(Date_Joined)) as newjoins_yearly
		from MyDB.dbo.Unicorn_Startups_202209) as T1
	where Year between 2011 and 2022
	) AS T2
WHERE yearly_increase<>0
;
select
	*,
	total_newjoins_valuation_yearly - lag(total_newjoins_valuation_yearly) over(order by Year) as valuation_increase
from
(select
	year(Date_Joined) as Year,
	sum(Valuation_B) as total_newjoins_valuation_yearly
from MyDB.dbo.Unicorn_Startups_202209
group by year(Date_Joined)
) as T1
;	

-- The top 3 booming industries as of year 2022
select
	top 3 Industry,
	sum(Valuation_B) as total_industry_valuation
from MyDB.dbo.Unicorn_Startups_202209
where YEAR(Date_Joined)=2022
group by Industry
order by sum(Valuation_B) desc
;

-- Yearly Cumulative Listed Unicorns by Industry
select
	Industry,
	Year,
	sum(cum_count) as cum_unicorn_count
from
(select
	Industry,
	YEAR(Date_Joined) as Year,
	count(Company) over(order by year(Date_Joined) rows between unbounded preceding and current row) as cum_count 
from MyDB.dbo.Unicorn_Startups_202209) as t1
group by Industry, Year
order by Industry, Year
;

-- Top industries for the past 5 years
select
	top 5 Industry,
	sum(Valuation_B) as total_valuation
from MyDB.dbo.Unicorn_Startups_202209
where Date_Joined >= DATEADD(year, -5, getdate())
group by Industry
order by sum(Valuation_B) desc
;

-- dataset: https://www.kaggle.com/datasets/ramjasmaurya/unicorn-startups












